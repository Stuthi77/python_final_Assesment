# -*- coding: utf-8 -*-
"""Python_Final_Assesment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CPo8P0ZXgKEotsu7JbwpFZFjpAyvGloA

1

#1. Load dataset
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium

data=pd.read_excel("/content/Walmart_Dataset Python_Final_Assessment.xlsx")
data

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df=pd.DataFrame(data)
df.head

df.info()

df.describe()

"""#2 data cleaning"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium
df['Category']=pd.fillna(df['Category']'missing-value')
df['EmailID']=pd.fillna(df['EmailID']='missing-value')
df['Geography']=pd.fillna(df['Geography']='missing-value')
df['Order Date']=pd.fillna(df['Order Date']='0000-00-00')
df['Order ID']=pd.dropna(df['Order ID']='missing-value')
df['Product Name']=pd.fillna(df['Product Name']='missing-value')
df['Profit']=pd.fillna(df['Profit'].mean())
df['Quantity']=pd.fillna(df['Quantity'].mean())
df['Sales']=pd.fillna(df['Sales'].mean())

df1=df.groupby('Order ID')
df1.head()

"""#3 Descriptive Statistics"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium
df2=df.groupby('Category').aggregate({'Sales':['mean','median','mode','range','var','std']})
df2=df.groupby('Category').mean()
df2=df.groupby('Category').median()
df2=df.groupby('Category').count()
df2=df.groupby('Category').std()
df2=df2**2 ## variance of the function
print(df2)

"""#4 data Vizualization"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium
#scatter plot
x=df['Category']
y=df['Profit']
plt.figure(figsize=(20,10))
plt.scatter(x,y)
plt.title('Category wise profit')
plt.xlabel('Category')
plt.ylabel('Profit')
plt.grid(True)
plt.show()

#line plot
month=df['Order Date']
x=month
y=df['Sales']
plt.figure(figsize=(20,10))
plt.plot_date(x,y)
plt.title('Order Date by Sales')
plt.xlabel('Orders')
plt.ylabel('Sales')
plt.grid(True)
plt.show()

#piechart
values=df['Quantity']
labels1=df['Category']
plt.pie(values,labels=labels1,autopct=None,pctdistance=0.6,shadow=False)
plt.title('Order Date by Sales')
plt.xlabel('Orders')
plt.ylabel('Sales')
plt.legend("Categeries")
plt.show()

#boxplot
x=df['Sales']
bab=df['Category']
plt.boxplot(x)
plt.title('Sales Distribution')
plt.xlabel('sales')
plt.legend()
plt.show()

"""#5 Identifying Relationships"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium
df.corr()

"""#6 Anomoly Detection"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium
print('Unusual data points')
df2=df.groupby('Category').aggregate({'Sales':['mean','median','mode','range','var','std']})
df2=df.groupby('Category').mean()
df2=df.groupby('Category').median()
df2=df.groupby('Category').count()
df2=df.groupby('Category').std()
df2=df2**2 ## variance of the function
print(df2)
x=df['Category']
y=df['Profit']
plt.figure(figsize=(20,10))
plt.scatter(x,y)
plt.title('Category wise profit')
plt.xlabel('Category')
plt.ylabel('Profit')
plt.grid(True)
plt.show()
month=df['Order Date']
x=month
y=df['Sales']
plt.figure(figsize=(20,10))
plt.plot_date(x,y)
plt.title('Order Date by Sales')
plt.xlabel('Orders')
plt.ylabel('Sales')
plt.grid(True)
plt.show()
month=df['Order Date']
x=month
y=df['Sales']
plt.figure(figsize=(20,10))
plt.plot_date(x,y)
plt.title('Order Date by Sales')
plt.xlabel('Orders')
plt.ylabel('Sales')
plt.grid(True)
plt.show()

df.corr()

"""# 7 Data Discovery
# i) Trend Analysis
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
#import folium

df3=df[['Sales','Profit','Order Date']]
#sns.heatmap(df3,cmap='cool',fmt='d')
#plt.show()

plt.plot(df['Order Date'],df['Sales'],color='orange')
plt.plot(df['Order Date'],df['Profit'],color='blue')
plt.title('Sales Vs Profit over time')
plt.xlabel('Date')

plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df3=df[['Sales','Category','Order Date']]
result=df3.groupby('Category')['Sales'].max()
print(result)

"""ii)Customer Analysis"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df3=df.groupby('Category')['Quantity'].max().reset_index()
df4=df3.sort_values(by='Quantity')
print(df4)

df['time_difference']=np.abs(df['Order Date']-df['Ship Date'])
df3=df.groupby('EmailID').reset_index()
print(df3)

"""#comprehensive analytics"""

df3=df[['Sales','Category']]
sns.heatmap(df3,annot=True,fmt='d',cmap='cool')
plt.show()

df3=df[['Sales','Geography']]
plt.plot(df3['Sales'],df3['Geography'])
plt.show()

